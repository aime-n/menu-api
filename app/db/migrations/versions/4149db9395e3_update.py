"""update

Revision ID: 4149db9395e3
Revises: 35ed5f4d13c8
Create Date: 2025-06-19 23:15:37.593252

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4149db9395e3"
down_revision: Union[str, Sequence[str], None] = "35ed5f4d13c8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_ingredient_name"), table_name="ingredient")
    op.drop_table("ingredient")
    op.drop_index(op.f("ix_recipe_name"), table_name="recipe")
    op.drop_table("recipe")
    op.drop_index(
        op.f("ix_recipeingredientlink_quantity"), table_name="recipeingredientlink"
    )
    op.drop_table("recipeingredientlink")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "recipeingredientlink",
        sa.Column("recipe_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("ingredient_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("quantity", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("unit", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["ingredient_id"],
            ["ingredient.id"],
            name=op.f("recipeingredientlink_ingredient_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["recipe_id"],
            ["recipe.id"],
            name=op.f("recipeingredientlink_recipe_id_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "recipe_id", "ingredient_id", name=op.f("recipeingredientlink_pkey")
        ),
    )
    op.create_index(
        op.f("ix_recipeingredientlink_quantity"),
        "recipeingredientlink",
        ["quantity"],
        unique=False,
    )
    op.create_table(
        "recipe",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("instructions", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("recipe_pkey")),
    )
    op.create_index(op.f("ix_recipe_name"), "recipe", ["name"], unique=False)
    op.create_table(
        "ingredient",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("ingredient_pkey")),
    )
    op.create_index(op.f("ix_ingredient_name"), "ingredient", ["name"], unique=True)
    # ### end Alembic commands ###
